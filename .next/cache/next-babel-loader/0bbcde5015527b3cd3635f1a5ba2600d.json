{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/maxmetcalfe/Documents/src/BookList/pages/index.js\";\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport fetch from 'node-fetch';\n\nvar parser = require('fast-xml-parser');\n\nfunction fetchData(url) {\n  return new Promise(function (resolve, reject) {\n    fetch(url).then(function (res) {\n      return res.text();\n    }).then(function (body) {\n      return resolve(body);\n    });\n  });\n}\n\nvar MainComponent = function MainComponent(props) {\n  console.log(props);\n\n  for (var i = 0; i < books.length; i++) {\n    bookElements.push(__jsx(\"div\", {\n      \"class\": \"book\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 7\n      }\n    }, books[i].best_book.title));\n  }\n\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }\n  }, bookElements);\n};\n\nMainComponent.getInitialProps = function _callee() {\n  var data;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(fetchData(\"https://www.goodreads.com/book/show.json?id=26050611-good-profit\"));\n\n        case 2:\n          data = _context.sent;\n          console.log(data);\n          return _context.abrupt(\"return\", JSON.parse(data));\n\n        case 5:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nexport default MainComponent;","map":{"version":3,"sources":["/Users/maxmetcalfe/Documents/src/BookList/pages/index.js"],"names":["React","fetch","parser","require","fetchData","url","Promise","resolve","reject","then","res","text","body","MainComponent","props","console","log","i","books","length","bookElements","push","best_book","title","getInitialProps","data","JSON","parse"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,YAAlB;;AAEA,IAAIC,MAAM,GAAGC,OAAO,CAAC,iBAAD,CAApB;;AAEA,SAASC,SAAT,CAAmBC,GAAnB,EAAwB;AACtB,SAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtCP,IAAAA,KAAK,CAACI,GAAD,CAAL,CACGI,IADH,CACQ,UAAAC,GAAG;AAAA,aAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,KADX,EAEGF,IAFH,CAEQ,UAAAG,IAAI;AAAA,aAAIL,OAAO,CAACK,IAAD,CAAX;AAAA,KAFZ;AAGD,GAJM,CAAP;AAKD;;AAED,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,KAAD,EAAW;AAC/BC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;;AAEA,OAAK,IAAIG,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGC,KAAK,CAACC,MAA1B,EAAkCF,CAAC,EAAnC,EAAuC;AACrCG,IAAAA,YAAY,CAACC,IAAb,CACE;AAAK,eAAM,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGH,KAAK,CAACD,CAAD,CAAL,CAASK,SAAT,CAAmBC,KADtB,CADF;AAKD;;AAED,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGH,YADH,CADF;AAKD,CAhBD;;AAkBAP,aAAa,CAACW,eAAd,GAAgC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACbpB,SAAS,CAAC,kEAAD,CADI;;AAAA;AAC1BqB,UAAAA,IAD0B;AAE9BV,UAAAA,OAAO,CAACC,GAAR,CAAYS,IAAZ;AAF8B,2CAGvBC,IAAI,CAACC,KAAL,CAAWF,IAAX,CAHuB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAhC;;AAMA,eAAeZ,aAAf","sourcesContent":["import React from 'react'\nimport fetch from 'node-fetch'\n\nvar parser = require('fast-xml-parser');\n\nfunction fetchData(url) {\n  return new Promise((resolve, reject) => {\n    fetch(url)\n      .then(res => res.text())\n      .then(body => resolve(body))\n  })\n}\n\nconst MainComponent = (props) => {\n  console.log(props);\n  \n  for (let i = 0; i < books.length; i++) {\n    bookElements.push(\n      <div class=\"book\">\n        {books[i].best_book.title}\n      </div>\n    );\n  }\n\n  return (\n    <div>\n      {bookElements}\n    </div>\n  )\n}\n\nMainComponent.getInitialProps = async () => {\n  let data = await fetchData(\"https://www.goodreads.com/book/show.json?id=26050611-good-profit\");\n  console.log(data);\n  return JSON.parse(data);\n}\n\nexport default MainComponent\n"]},"metadata":{},"sourceType":"module"}