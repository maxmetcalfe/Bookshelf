{"ast":null,"code":"var _jsxFileName = \"/Users/maxmetcalfe/Documents/src/BookList/pages/index.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport fetch from 'node-fetch';\n\nvar parser = require('fast-xml-parser');\n\nfunction fetchData(url) {\n  return new Promise((resolve, reject) => {\n    fetch(url).then(res => res.text()).then(body => resolve(body));\n  });\n}\n\nconst MainComponent = props => {\n  console.log({\n    props\n  });\n  console.log(props.GoodreadsResponse.search.results.work.length);\n  let books = props.GoodreadsResponse.search.results.work;\n  let bookElements = [];\n\n  for (let i = 0; i < props.GoodreadsResponse.search.results.work.length; i++) {\n    console.log(props.GoodreadsResponse.search.results.work[i]);\n    bookElements.push(__jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 23\n      }\n    }, \"Hello world!\"));\n  }\n\n  return bookElements;\n};\n\nMainComponent.getInitialProps = async () => {\n  let xmlData = await fetchData(\"https://www.goodreads.com/search.xml?key=P89RUgLvpIk3VVqzk54Kcw&q=Ender%27s+Game\");\n  let data = parser.parse(xmlData);\n  return parser.parse(xmlData);\n};\n\nexport default MainComponent;","map":{"version":3,"sources":["/Users/maxmetcalfe/Documents/src/BookList/pages/index.js"],"names":["React","fetch","parser","require","fetchData","url","Promise","resolve","reject","then","res","text","body","MainComponent","props","console","log","GoodreadsResponse","search","results","work","length","books","bookElements","i","push","getInitialProps","xmlData","data","parse"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,YAAlB;;AAEA,IAAIC,MAAM,GAAGC,OAAO,CAAC,iBAAD,CAApB;;AAEA,SAASC,SAAT,CAAmBC,GAAnB,EAAwB;AACtB,SAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACtCP,IAAAA,KAAK,CAACI,GAAD,CAAL,CACGI,IADH,CACQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADf,EAEGF,IAFH,CAEQG,IAAI,IAAIL,OAAO,CAACK,IAAD,CAFvB;AAGD,GAJM,CAAP;AAKD;;AAED,MAAMC,aAAa,GAAIC,KAAD,IAAW;AAC/BC,EAAAA,OAAO,CAACC,GAAR,CAAY;AAACF,IAAAA;AAAD,GAAZ;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,iBAAN,CAAwBC,MAAxB,CAA+BC,OAA/B,CAAuCC,IAAvC,CAA4CC,MAAxD;AACA,MAAIC,KAAK,GAAGR,KAAK,CAACG,iBAAN,CAAwBC,MAAxB,CAA+BC,OAA/B,CAAuCC,IAAnD;AAEA,MAAIG,YAAY,GAAG,EAAnB;;AAEA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGV,KAAK,CAACG,iBAAN,CAAwBC,MAAxB,CAA+BC,OAA/B,CAAuCC,IAAvC,CAA4CC,MAAhE,EAAwEG,CAAC,EAAzE,EAA6E;AAC3ET,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,iBAAN,CAAwBC,MAAxB,CAA+BC,OAA/B,CAAuCC,IAAvC,CAA4CI,CAA5C,CAAZ;AACAD,IAAAA,YAAY,CAACE,IAAb,CAAkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAlB;AACD;;AAED,SAAOF,YAAP;AACD,CAbD;;AAeAV,aAAa,CAACa,eAAd,GAAgC,YAAY;AAC1C,MAAIC,OAAO,GAAG,MAAMvB,SAAS,CAAC,kFAAD,CAA7B;AACA,MAAIwB,IAAI,GAAG1B,MAAM,CAAC2B,KAAP,CAAaF,OAAb,CAAX;AAEA,SAAOzB,MAAM,CAAC2B,KAAP,CAAaF,OAAb,CAAP;AACD,CALD;;AAOA,eAAed,aAAf","sourcesContent":["import React from 'react'\nimport fetch from 'node-fetch'\n\nvar parser = require('fast-xml-parser');\n\nfunction fetchData(url) {\n  return new Promise((resolve, reject) => {\n    fetch(url)\n      .then(res => res.text())\n      .then(body => resolve(body))\n  })\n}\n\nconst MainComponent = (props) => {\n  console.log({props});\n  console.log(props.GoodreadsResponse.search.results.work.length);\n  let books = props.GoodreadsResponse.search.results.work;\n  \n  let bookElements = [];\n  \n  for (let i = 0; i < props.GoodreadsResponse.search.results.work.length; i++) {\n    console.log(props.GoodreadsResponse.search.results.work[i]);\n    bookElements.push(<div>Hello world!</div>);\n  }\n\n  return bookElements;\n}\n\nMainComponent.getInitialProps = async () => {\n  let xmlData = await fetchData(\"https://www.goodreads.com/search.xml?key=P89RUgLvpIk3VVqzk54Kcw&q=Ender%27s+Game\");\n  let data = parser.parse(xmlData);\n\n  return parser.parse(xmlData);\n}\n\nexport default MainComponent\n"]},"metadata":{},"sourceType":"module"}